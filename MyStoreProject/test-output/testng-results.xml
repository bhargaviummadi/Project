<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-05T17:19:08 IST" name="Default suite" finished-at="2023-09-05T17:24:44 IST" duration-ms="335804">
    <groups>
    </groups>
    <test started-at="2023-09-05T17:19:08 IST" name="Default test" finished-at="2023-09-05T17:24:44 IST" duration-ms="335804">
      <class name="testCase.TC02">
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:19:08 IST" name="BeforeMethod" finished-at="2023-09-05T17:19:42 IST" duration-ms="33403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="check()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:19:42 IST" name="check" finished-at="2023-09-05T17:19:42 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:19:42 IST" name="afterMethod" finished-at="2023-09-05T17:19:42 IST" duration-ms="211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:19:42 IST" name="BeforeMethod" finished-at="2023-09-05T17:20:12 IST" duration-ms="29584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="clickTheCart()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:20:12 IST" name="clickTheCart" finished-at="2023-09-05T17:20:42 IST" duration-ms="30108" status="FAIL">
          <exception class="org.openqa.selenium.json.JsonException">
            <message>
              <![CDATA[java.lang.reflect.InvocationTargetException
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [028b3049052459bfecfb8b171fd23524, actions {actions=[org.openqa.selenium.interactions.Sequence@65b66b08]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ubhar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60610}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60610/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 028b3049052459bfecfb8b171fd23524]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [028b3049052459bfecfb8b171fd23524, actions {actions=[org.openqa.selenium.interactions.Sequence@65b66b08]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ubhar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60610}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60610/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 028b3049052459bfecfb8b171fd23524
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:362)
at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:154)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182)
at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:68)
at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287)
at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278)
at org.openqa.selenium.json.Json.toJson(Json.java:42)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:259)
at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:122)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:611)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:567)
at Actiondriver.Action.click(Action.java:16)
at pages.AddToCartPage.clickonAddToCart(AddToCartPage.java:37)
at testCase.TC02.clickTheCart(TC02.java:122)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:303)
at org.openqa.selenium.json.Json.toJson(Json.java:40)
... 39 more
Caused by: java.lang.reflect.InvocationTargetException
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:358)
... 60 more
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="add_to_cart"]/button"}
  (Session info: chrome=116.0.5845.141)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [028b3049052459bfecfb8b171fd23524, findElement {using=xpath, value=//*[@id="add_to_cart"]/button}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 116.0.5845.141, chrome: {chromedriverVersion: 116.0.5845.96 (1a3918166880..., userDataDir: C:\Users\ubhar\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60610}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60610/devtoo..., se:cdpVersion: 116.0.5845.141, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 028b3049052459bfecfb8b171fd23524
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy16.getWrappedElement(Unknown Source)
at org.openqa.selenium.interactions.PointerInput$Origin.asArg(PointerInput.java:269)
at org.openqa.selenium.interactions.PointerInput$Move.encode(PointerInput.java:218)
at org.openqa.selenium.interactions.Sequence.encode(Sequence.java:73)
at org.openqa.selenium.interactions.Sequence.toJson(Sequence.java:82)
... 65 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.json.JsonException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTheCart -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:20:42 IST" name="afterMethod" finished-at="2023-09-05T17:20:42 IST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:20:42 IST" name="BeforeMethod" finished-at="2023-09-05T17:21:35 IST" duration-ms="52716" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="clickTheProduct()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:21:35 IST" name="clickTheProduct" finished-at="2023-09-05T17:21:35 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickTheProduct -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:21:35 IST" name="afterMethod" finished-at="2023-09-05T17:21:35 IST" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:21:35 IST" name="BeforeMethod" finished-at="2023-09-05T17:22:48 IST" duration-ms="73375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="scrollDown()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:22:48 IST" name="scrollDown" finished-at="2023-09-05T17:22:48 IST" duration-ms="39" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollDown -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:22:48 IST" name="afterMethod" finished-at="2023-09-05T17:22:48 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:22:48 IST" name="BeforeMethod" finished-at="2023-09-05T17:23:02 IST" duration-ms="13317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="scrollUp()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:02 IST" name="scrollUp" finished-at="2023-09-05T17:23:02 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollUp -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:02 IST" name="afterMethod" finished-at="2023-09-05T17:23:02 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:02 IST" name="BeforeMethod" finished-at="2023-09-05T17:23:14 IST" duration-ms="11832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyCookiesHandle()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:14 IST" name="verifyCookiesHandle" finished-at="2023-09-05T17:23:14 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCookiesHandle -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:14 IST" name="afterMethod" finished-at="2023-09-05T17:23:14 IST" duration-ms="133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:14 IST" name="BeforeMethod" finished-at="2023-09-05T17:23:24 IST" duration-ms="10105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyGetWindowHandle()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:24 IST" name="verifyGetWindowHandle" finished-at="2023-09-05T17:23:24 IST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyGetWindowHandle -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:24 IST" name="afterMethod" finished-at="2023-09-05T17:23:24 IST" duration-ms="84" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:24 IST" name="BeforeMethod" finished-at="2023-09-05T17:23:35 IST" duration-ms="10324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyLoginWithValidCredential()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:35 IST" name="verifyLoginWithValidCredential" finished-at="2023-09-05T17:23:39 IST" duration-ms="4099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredential -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:39 IST" name="afterMethod" finished-at="2023-09-05T17:23:39 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:39 IST" name="BeforeMethod" finished-at="2023-09-05T17:23:48 IST" duration-ms="9455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyMouseHover()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:48 IST" name="verifyMouseHover" finished-at="2023-09-05T17:23:48 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMouseHover -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:48 IST" name="afterMethod" finished-at="2023-09-05T17:23:49 IST" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:23:49 IST" name="BeforeMethod" finished-at="2023-09-05T17:24:06 IST" duration-ms="17855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifyScrollDown()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:24:06 IST" name="verifyScrollDown" finished-at="2023-09-05T17:24:07 IST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDown -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:24:07 IST" name="afterMethod" finished-at="2023-09-05T17:24:07 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:24:07 IST" name="BeforeMethod" finished-at="2023-09-05T17:24:28 IST" duration-ms="20729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="verifySearchBar()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:24:28 IST" name="verifySearchBar" finished-at="2023-09-05T17:24:44 IST" duration-ms="16168" status="FAIL">
          <exception class="org.openqa.selenium.support.ui.UnexpectedTagNameException">
            <message>
              <![CDATA[Element should have been "select" but was "a"
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.support.ui.UnexpectedTagNameException: Element should have been "select" but was "a"
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.<init>(Select.java:49)
at utilis.Utility1.selectValue(Utility1.java:20)
at pages.MyAccountPage.selectDropDown(MyAccountPage.java:61)
at testCase.TC02.verifySearchBar(TC02.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.support.ui.UnexpectedTagNameException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchBar -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.TC02@2a265ea9]" started-at="2023-09-05T17:24:44 IST" name="afterMethod" finished-at="2023-09-05T17:24:44 IST" duration-ms="224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCase.TC02 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
